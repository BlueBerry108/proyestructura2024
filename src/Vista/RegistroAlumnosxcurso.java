/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.*;
import javax.swing.table.DefaultTableModel;
import proyectofinal.ProyectoFinal;

/**
 *
 * @author PERSONAL
 */
public class RegistroAlumnosxcurso extends javax.swing.JFrame {

    public RegistroAlumnosxcurso() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        mostrarCabecera();

        //CBOcurso
        if (ProyectoFinal.cursitos.inicio == null) {//para no agregar mas veces
            ProyectoFinal.cursitos.InsertarFinal(newcourse);
            ProyectoFinal.cursitos.InsertarFinal(newcourse2);
            ProyectoFinal.cursitos.InsertarFinal(newcourse3);
            ProyectoFinal.cursitos.InsertarFinal(newcourse4);
        }

        //CBOnomcurso.removeAllItems();               
        nodo<Curso> Actual = ProyectoFinal.cursitos.inicio;//clase generica toncs necesita q el nodo sea de esa clase

        while (Actual != null) {
            CBOnomcurso.addItem(Actual.dato.getCursos());//obtener el nombre
            //ProyectoFinal.cursitos.Mostrar();
            System.out.println("curso: " + Actual.dato.getCursos());
            Actual = Actual.siguiente;//avanza                       
        }

        //alumno ingresado a allstudents
        ProyectoFinal.alumnos.InsertarFinal(alumno1);
        ProyectoFinal.alumnos.InsertarFinal(alumno2);
        ProyectoFinal.alumnos.InsertarFinal(alumno3);

        //addeventlistener
        CBOnomcurso.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String cursoSeleccionado = (String) CBOnomcurso.getSelectedItem();

                // Verifica si se seleccion칩 un curso v치lido
                if (cursoSeleccionado.equals("Seleccionar Curso")) {
                    return; // Salir si no se selecciona un curso v치lido
                }

                // Recorre la lista de cursos para encontrar el seleccionado
                nodo<Curso> Actual = ProyectoFinal.cursitos.inicio;
                while (Actual != null && !Actual.dato.getCursos().equals(cursoSeleccionado)) {
                    Actual = Actual.siguiente;
                }

                if (Actual == null) {
                    System.out.println("El curso seleccionado no existe.");
                    return;
                }

                // Llena la tabla con los alumnos del curso seleccionado
                nodo<Alumno> alumnosCurso = Actual.dato.getAlumnosdelcurso().inicio;
                DefaultTableModel modelo = (DefaultTableModel) TBmostraralumnosxcurso.getModel();
                modelo.setRowCount(0); // Limpia todas las filas
                while (alumnosCurso != null) {
                    String[] fila = {
                        String.valueOf(alumnosCurso.dato.getCodigo()),
                        alumnosCurso.dato.getNombres() + " " + alumnosCurso.dato.getApellidop() + " " + alumnosCurso.dato.getApellidom(),
                        "0", "0", "0", "0", "0"
                    };
                    modelo.addRow(fila);
                    alumnosCurso = alumnosCurso.siguiente; // Avanza al siguiente alumno
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBmostraralumnosxcurso = new javax.swing.JTable();
        TXTcodalumno = new javax.swing.JTextField();
        BTNagregaralumnoxcurso = new javax.swing.JButton();
        BTNelimalumnoxcurso = new javax.swing.JButton();
        CBOnomcurso = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 153, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Registrar Alumnos por Curso: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("C칩digo: ");

        TBmostraralumnosxcurso.setBackground(new java.awt.Color(255, 204, 51));
        TBmostraralumnosxcurso.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        TBmostraralumnosxcurso.setForeground(new java.awt.Color(51, 51, 51));
        TBmostraralumnosxcurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Alumno", "Nombre Alumno", "Nota 1", "Nota 2", "Nota 3", "Nota 4", "Promedio"
            }
        ));
        jScrollPane1.setViewportView(TBmostraralumnosxcurso);

        TXTcodalumno.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TXTcodalumno.setForeground(new java.awt.Color(51, 51, 51));
        TXTcodalumno.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.gray));

        BTNagregaralumnoxcurso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BTNagregaralumnoxcurso.setForeground(new java.awt.Color(51, 51, 51));
        BTNagregaralumnoxcurso.setText("Agregar");
        BTNagregaralumnoxcurso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.gray, java.awt.Color.white));
        BTNagregaralumnoxcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNagregaralumnoxcursoActionPerformed(evt);
            }
        });

        BTNelimalumnoxcurso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BTNelimalumnoxcurso.setForeground(new java.awt.Color(51, 51, 51));
        BTNelimalumnoxcurso.setText("Eiminar");
        BTNelimalumnoxcurso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.gray, java.awt.Color.white));
        BTNelimalumnoxcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNelimalumnoxcursoActionPerformed(evt);
            }
        });

        CBOnomcurso.setBackground(new java.awt.Color(255, 204, 51));
        CBOnomcurso.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CBOnomcurso.setForeground(new java.awt.Color(51, 51, 51));
        CBOnomcurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Curso" }));
        CBOnomcurso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.lightGray));
        CBOnomcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBOnomcursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addGap(63, 63, 63)
                        .addComponent(CBOnomcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(BTNelimalumnoxcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(TXTcodalumno, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(BTNagregaralumnoxcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CBOnomcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TXTcodalumno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTNagregaralumnoxcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNelimalumnoxcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 760, 450));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Lista<Alumno> allstudents = new Lista<>();
    Lista<Alumno> materiabiologia = new Lista<>();
    Lista<Alumno> materiamate = new Lista<>();
    Lista<Alumno> materiacoms = new Lista<>();
    Lista<Alumno> materiaalge = new Lista<>();

    Curso newcourse = new Curso("Biologia", materiabiologia);
    Curso newcourse2 = new Curso("Matematicas", materiamate);
    Curso newcourse3 = new Curso("Comunicacion", materiacoms);
    Curso newcourse4 = new Curso("Algebra", materiaalge);

    //creacion alumno
    Alumno alumno1 = new Alumno("Juan", "NS", "NS", 1001);
    Alumno alumno2 = new Alumno("Maria", "NS", "NS", 1002);
    Alumno alumno3 = new Alumno("Diana", "NS", "NS", 1003);

    public void mostrarCabecera() {
        TBmostraralumnosxcurso.getColumnModel().getColumn(0).setPreferredWidth(150);
        TBmostraralumnosxcurso.getColumnModel().getColumn(1).setPreferredWidth(210);
        TBmostraralumnosxcurso.getColumnModel().getColumn(2).setPreferredWidth(80);
        TBmostraralumnosxcurso.getColumnModel().getColumn(3).setPreferredWidth(80);
        TBmostraralumnosxcurso.getColumnModel().getColumn(4).setPreferredWidth(80);
        TBmostraralumnosxcurso.getColumnModel().getColumn(5).setPreferredWidth(80);
        TBmostraralumnosxcurso.getColumnModel().getColumn(6).setPreferredWidth(80);

    }


    private void CBOnomcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBOnomcursoActionPerformed
        //ssdf
        //nodo<Curso> Actual= ProyectoFinal.cursitos.inicio;      


    }//GEN-LAST:event_CBOnomcursoActionPerformed

    private void BTNagregaralumnoxcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNagregaralumnoxcursoActionPerformed
        // TODO add your handling code here:
        int codigoalumno = Integer.parseInt(TXTcodalumno.getText());
        String cursoelegido = (String) CBOnomcurso.getSelectedItem();
        //System.out.println(cursoelegido);

        nodo<Curso> Actual = ProyectoFinal.cursitos.inicio;
        nodo<Alumno> Actual2 = ProyectoFinal.alumnos.inicio;

        //recorre la lista cursos
        while (Actual != null && !Actual.dato.getCursos().equals(cursoelegido)) {
            System.out.println(cursoelegido);
            System.out.println(Actual.dato.getCursos());
            Actual = Actual.siguiente;
        }// biologia mate coms algebra

        if (Actual == null) {
            System.out.println("El curso no coincide o no existe.");
            return;
        }

        //recorre la lista alumnos        
        while (Actual2 != null) {
            if (Actual2.dato.getCodigo() == codigoalumno) {
                //si hay coincidencia del codigo a침ade al alumno a la lista de alumnos dentro del nodo curso que se encontro
                //antes
                Actual.dato.Agregaralumnosdelcurso(Actual2.dato);
                System.out.println("Alumno ingresado con exito");
                break;
            }
            Actual2 = Actual2.siguiente;
        }

        if (Actual2 == null) {
            System.out.println("El codigo no existe");
        }

        //mostrar en la tabla        
        nodo<Alumno> Recorrer = Actual.dato.getAlumnosdelcurso().inicio;
        DefaultTableModel modelo1 = (DefaultTableModel) TBmostraralumnosxcurso.getModel();
        modelo1.setRowCount(0);

        while (Recorrer != null) {
            String[] arreglotabla = {String.valueOf(Recorrer.dato.getCodigo()), Recorrer.dato.getNombres() + " " + Recorrer.dato.getApellidop() + " " + Recorrer.dato.getApellidom(), String.valueOf(0), String.valueOf(0), String.valueOf(0), String.valueOf(0), String.valueOf(0)};
            modelo1.addRow(arreglotabla);
            Recorrer = Recorrer.siguiente;
        }

    }//GEN-LAST:event_BTNagregaralumnoxcursoActionPerformed

    private void BTNelimalumnoxcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNelimalumnoxcursoActionPerformed
        // TODO add your handling code here:
        //elimin alumno de la lista dentro del nodo curso q se selecciono
        DefaultTableModel modelo2 = (DefaultTableModel) TBmostraralumnosxcurso.getModel();

        int indice = TBmostraralumnosxcurso.getSelectedRow();
        String cursoelegido = (String) CBOnomcurso.getSelectedItem();
        
        nodo<Curso> Actual = ProyectoFinal.cursitos.inicio;

        //recorrer la lista de cursos
        while (Actual != null && !Actual.dato.getCursos().equals(cursoelegido)) {
            Actual = Actual.siguiente;
        }

        Actual.dato.Eliminaralumnosdelcurso(indice);
        System.out.println("Se elimino el alumno de la lista");
        modelo2.removeRow(indice);
        
        System.out.println("Lista actualizada de alumnos del curso:");
        Actual.dato.getAlumnosdelcurso().Mostrar();

    }//GEN-LAST:event_BTNelimalumnoxcursoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnosxcurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnosxcurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnosxcurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnosxcurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroAlumnosxcurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNagregaralumnoxcurso;
    private javax.swing.JButton BTNelimalumnoxcurso;
    private javax.swing.JComboBox<String> CBOnomcurso;
    private javax.swing.JTable TBmostraralumnosxcurso;
    private javax.swing.JTextField TXTcodalumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
